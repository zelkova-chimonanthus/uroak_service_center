package name.uroak.uroak_service_center.shared.base.param

import name.uroak.uroak_service_center.base.constants.リクエストフィールド名
import name.uroak.uroak_service_center.shared.base.util.手続き処理種別一覧
import name.uroak.uroak_service_center.shared.constants.message.メッセージID一覧

/**
 *
 */
class 共通パラメータクラス : 手続きパラメータ共通クラス() {

    /***/
    private var 共通パラメータモード: 共通パラメータモードクラス = 共通パラメータモードクラス()

    /**
     *
     */
//    fun 対象テーブル構成と手続き処理種別をセットする(対象テーブル構成JSONフィールド値: String, 手続き処理種別JSONフィールド値: String) {
//        共通パラメータモード.対象テーブル構成をセットする(対象テーブル構成JSONフィールド値)
//        共通パラメータモード.手続き処理種別をセットする(手続き処理種別JSONフィールド値)
//    }

    /**
     * 手続き処理種別は対象テーブル構成が単一の場合はパラメータから設定され、それ以外の場合は手続きメソッドのアノテーションで指定する。
     */
    fun 手続き処理種別をセットする(手続き処理種別: 手続き処理種別一覧) {
        共通パラメータモード.手続き処理種別をセットする(手続き処理種別)
    }


    /**
     *
     */
    fun 対象テーブル構成と手続き処理種別を返す() = 共通パラメータモード

    /**
     *
     */
    fun 対象テーブル構成を返す() = 共通パラメータモード.対象テーブル構成を返す()

    /**
     *
     */
    fun 手続き処理種別を返す() = 共通パラメータモード.手続き処理種別を返す()

    /**
     *
     */
    fun 返信言語種別を返す() = 共通パラメータモード.返信言語種別を返す()

    /**
     *
     */
    override fun マップからデータをセットする(マップ: Map<String, Any?>) {

        val モードデータ = リクエストフィールド名.モード.同名のフィールドをマップで取得する(マップ) ?: エラーをスローする(
            メッセージID一覧.BAS_E_0009,
            リクエストフィールド名.モード.フィールド名を文字列化する()
        )

        共通パラメータモード.パラメータからデータをセットする(モードデータ)
    }

    /**
     *
     */
    override fun 解析結果をクリアする() {
        共通パラメータモード = 共通パラメータモードクラス()
    }
}
