package name.uroak.uroak_service_center.sysad.services

import name.uroak.uroak_service_center.base.services.手続きサービスクラス
import name.uroak.uroak_service_center.shared.base.constants.共通引数フィールド名
import name.uroak.uroak_service_center.shared.base.execution.手続き呼出し
import name.uroak.uroak_service_center.shared.base.ret.戻り値クラス
import name.uroak.uroak_service_center.shared.base.ret.検索系戻り値クラス
import name.uroak.uroak_service_center.shared.base.util.手続き処理種別一覧
import name.uroak.uroak_service_center.shared.base.util.手続き実行情報クラス
import name.uroak.uroak_service_center.shared.util.extension.Boolean値で取得する
import name.uroak.uroak_service_center.shared.util.extension.Int値で取得する
import name.uroak.uroak_service_center.shared.util.extension.文字列値で取得する
import name.uroak.uroak_service_center.sysad.constants.引数フィールド名
import name.uroak.uroak_service_center.sysad.repository.*
import org.springframework.beans.factory.annotation.Autowired
import org.springframework.stereotype.Service

/**
 *
 */
@Service
class 実行権限検索権限関連手続きサービスクラス : 手続きサービスクラス {
    /***/
    @Autowired
    private lateinit var 実行権限管理検索権限関連リポジトリ: 実行権限管理検索権限関連リポジトリ

    /**
     *
     */
    constructor() : super("実行権限検索権限関連手続きサービス") {

    }

    /**
     *
     */
    @手続き呼出し(
        手続きコード = "permission",
        手続きコード補助コード = "list",
        手続きコード補助コード2 = "permission_info",
        処理種別 = 手続き処理種別一覧.検索
    )
    fun 実行権限データを収集する(手続き実行情報: 手続き実行情報クラス): 戻り値クラス {
        val 戻り値 = 検索系戻り値クラス(手続き実行情報)

        val パラメータ = 手続き実行情報.汎用手続き用条件パラメータを返す()

        val 取得件数上限 = パラメータ.Int値で取得する(共通引数フィールド名.取得件数上限)
        val 取得開始位置 = パラメータ.Int値で取得する(共通引数フィールド名.取得開始位置)

        val 取得データ = 実行権限管理検索権限関連リポジトリ.実行権限データを収集する(
            利用者会員識別子 = パラメータ.Int値で取得する(引数フィールド名.利用者会員識別子),
            利用者会員名称 = パラメータ.文字列値で取得する(引数フィールド名.利用者会員名称),
            利用者会員親目録識別子 = パラメータ.Int値で取得する(引数フィールド名.利用者会員親目録識別子),
            利用者会員親目録名称 = パラメータ.文字列値で取得する(引数フィールド名.利用者会員親目録名称),
            利用者会員システム管理者 = パラメータ.Boolean値で取得する(引数フィールド名.利用者会員システム管理者),
            利用者会員サービス管理者 = パラメータ.Boolean値で取得する(引数フィールド名.利用者会員サービス管理者),
            対象手続き識別子 = パラメータ.Int値で取得する(引数フィールド名.対象手続き識別子),
            対象手続き名称 = パラメータ.文字列値で取得する(引数フィールド名.対象手続き名称),
            対象手続き処理種別 = パラメータ.Int値で取得する(引数フィールド名.対象手続き処理種別),
            対象手続き親目録識別子 = パラメータ.Int値で取得する(引数フィールド名.対象手続き親目録識別子),
            対象手続き親目録名称 = パラメータ.文字列値で取得する(引数フィールド名.対象手続き親目録名称),
            対象手続きコントローラ識別子 = パラメータ.Int値で取得する(引数フィールド名.対象手続きコントローラ識別子),
            対象手続きコントローラ名称 = パラメータ.文字列値で取得する(引数フィールド名.対象手続きコントローラ名称),
            対象手続きコントローラURLパス = パラメータ.文字列値で取得する(引数フィールド名.対象手続きコントローラURLパス),
            対象手続きコントローラ使用中止 = パラメータ.Boolean値で取得する(引数フィールド名.対象手続きコントローラ使用中止),
            対象手続きコード = パラメータ.文字列値で取得する(引数フィールド名.対象手続きコード),
            対象手続き補助コード = パラメータ.文字列値で取得する(引数フィールド名.対象手続き補助コード),
            対象手続き補助コード2 = パラメータ.文字列値で取得する(引数フィールド名.対象手続き補助コード2),
            手続きパス = パラメータ.文字列値で取得する(引数フィールド名.手続きパス),
            実行権限_読込 = パラメータ.Boolean値で取得する(引数フィールド名.実行権限_読込),
            実行権限_登録 = パラメータ.Boolean値で取得する(引数フィールド名.実行権限_登録),
            実行権限_更新_論理削除 = パラメータ.Boolean値で取得する(引数フィールド名.実行権限_更新_論理削除),
            実行権限_物理削除 = パラメータ.Boolean値で取得する(引数フィールド名.実行権限_物理削除),
            実行権限_インポート = パラメータ.Boolean値で取得する(引数フィールド名.実行権限_インポート),
            実行権限_エクスポート = パラメータ.Boolean値で取得する(引数フィールド名.実行権限_エクスポート),
            更新日時最大値 = パラメータ.文字列値で取得する(共通引数フィールド名.更新日時最大値),
            更新日時最小値 = パラメータ.文字列値で取得する(共通引数フィールド名.更新日時最小値),
            取得件数上限 = 取得件数上限,
            取得開始位置 = 取得開始位置
        )

        var 全体件数: Int? = 取得件数が限定されていれば全体件数を返す(取得件数上限 != null)

        return 戻り値.取得データをセットする(取得データ, 取得開始位置, 全体件数, 取得件数上限)
    }

    /**
     *
     */
    @手続き呼出し(
        手続きコード = "permission",
        手続きコード補助コード = "list",
        手続きコード補助コード2 = "permission_setting_info",
        処理種別 = 手続き処理種別一覧.検索
    )
    fun 実行権限設定情報を収集する(手続き実行情報: 手続き実行情報クラス): 戻り値クラス {
        val 戻り値 = 検索系戻り値クラス(手続き実行情報)

        val パラメータ = 手続き実行情報.汎用手続き用条件パラメータを返す()

        val 取得件数上限 = パラメータ.Int値で取得する(共通引数フィールド名.取得件数上限)
        val 取得開始位置 = パラメータ.Int値で取得する(共通引数フィールド名.取得開始位置)

        val 取得データ = 実行権限管理検索権限関連リポジトリ.実行権限設定情報を収集する(
            利用者種別 = パラメータ.Int値で取得する(引数フィールド名.利用者種別),
            利用者識別子 = パラメータ.Int値で取得する(引数フィールド名.利用者識別子),
            利用者会員識別子 = パラメータ.Int値で取得する(引数フィールド名.利用者会員識別子),
            利用者会員名称 = パラメータ.文字列値で取得する(引数フィールド名.利用者会員名称),
            利用者会員親目録識別子 = パラメータ.Int値で取得する(引数フィールド名.利用者会員親目録識別子),
            利用者会員親目録名称 = パラメータ.文字列値で取得する(引数フィールド名.利用者会員親目録名称),
            利用者会員システム管理者 = パラメータ.Boolean値で取得する(引数フィールド名.利用者会員システム管理者),
            利用者会員サービス管理者 = パラメータ.Boolean値で取得する(引数フィールド名.利用者会員サービス管理者),
            利用者会員目録識別子 = パラメータ.Int値で取得する(引数フィールド名.利用者会員目録識別子),
            利用者会員目録名称 = パラメータ.文字列値で取得する(引数フィールド名.利用者会員目録名称),
            利用者会員目録親目録識別子 = パラメータ.Int値で取得する(引数フィールド名.利用者会員目録親目録識別子),
            利用者会員目録親目録名称 = パラメータ.文字列値で取得する(引数フィールド名.利用者会員目録親目録名称),
            利用者会員グループ識別子 = パラメータ.Int値で取得する(引数フィールド名.利用者会員グループ識別子),
            利用者会員グループ名称 = パラメータ.文字列値で取得する(引数フィールド名.利用者会員グループ名称),
            管理者グループ識別子 = パラメータ.Int値で取得する(引数フィールド名.管理者グループ識別子),
            管理者グループ名称 = パラメータ.文字列値で取得する(引数フィールド名.管理者グループ名称),
            利用対象種別 = パラメータ.Int値で取得する(引数フィールド名.利用対象種別),
            利用対象識別子 = パラメータ.Int値で取得する(引数フィールド名.利用対象識別子),
            対象手続き識別子 = パラメータ.Int値で取得する(引数フィールド名.対象手続き識別子),
            対象手続き名称 = パラメータ.文字列値で取得する(引数フィールド名.対象手続き名称),
            対象手続き処理種別 = パラメータ.Int値で取得する(引数フィールド名.対象手続き処理種別),
            対象手続き親目録識別子 = パラメータ.Int値で取得する(引数フィールド名.対象手続き親目録識別子),
            対象手続き親目録名称 = パラメータ.文字列値で取得する(引数フィールド名.対象手続き親目録名称),
            対象手続きコントローラ存在 = パラメータ.Boolean値で取得する(引数フィールド名.対象手続きコントローラ存在),
            対象手続きコントローラ識別子 = パラメータ.Int値で取得する(引数フィールド名.対象手続きコントローラ識別子),
            対象手続きコントローラ名称 = パラメータ.文字列値で取得する(引数フィールド名.対象手続きコントローラ名称),
            対象手続きコントローラ使用中止 = パラメータ.Boolean値で取得する(引数フィールド名.対象手続きコントローラ使用中止),
            手続きパス = パラメータ.文字列値で取得する(引数フィールド名.手続きパス),
            対象手続き目録識別子 = パラメータ.Int値で取得する(引数フィールド名.対象手続き目録識別子),
            対象手続き目録名称 = パラメータ.文字列値で取得する(引数フィールド名.対象手続き目録名称),
            対象手続き目録コントローラ存在 = パラメータ.Boolean値で取得する(引数フィールド名.対象手続き目録コントローラ存在),
            対象手続き目録コントローラ識別子 = パラメータ.Int値で取得する(引数フィールド名.対象手続き目録コントローラ識別子),
            対象手続き目録コントローラ名称 = パラメータ.文字列値で取得する(引数フィールド名.対象手続き目録コントローラ名称),
            対象手続き目録コントローラ使用中止 = パラメータ.Boolean値で取得する(引数フィールド名.対象手続き目録コントローラ使用中止),
            対象手続き目録親目録識別子 = パラメータ.Int値で取得する(引数フィールド名.対象手続き目録親目録識別子),
            対象手続き目録親目録名称 = パラメータ.文字列値で取得する(引数フィールド名.対象手続き目録親目録名称),
            対象手続き目録コントローラURLパス = パラメータ.文字列値で取得する(引数フィールド名.対象手続き目録コントローラURLパス),
            対象手続きグループ識別子 = パラメータ.Int値で取得する(引数フィールド名.対象手続きグループ識別子),
            対象手続きグループ名称 = パラメータ.文字列値で取得する(引数フィールド名.対象手続きグループ名称),
            実行権限_読込 = パラメータ.Boolean値で取得する(引数フィールド名.実行権限_読込),
            実行権限_登録 = パラメータ.Boolean値で取得する(引数フィールド名.実行権限_登録),
            実行権限_更新_論理削除 = パラメータ.Boolean値で取得する(引数フィールド名.実行権限_更新_論理削除),
            実行権限_物理削除 = パラメータ.Boolean値で取得する(引数フィールド名.実行権限_物理削除),
            実行権限_インポート = パラメータ.Boolean値で取得する(引数フィールド名.実行権限_インポート),
            実行権限_エクスポート = パラメータ.Boolean値で取得する(引数フィールド名.実行権限_エクスポート),
            更新日時最大値 = パラメータ.文字列値で取得する(共通引数フィールド名.更新日時最大値),
            更新日時最小値 = パラメータ.文字列値で取得する(共通引数フィールド名.更新日時最小値),
            取得件数上限 = 取得件数上限,
            取得開始位置 = 取得開始位置
        )

        var 全体件数: Int? = 取得件数が限定されていれば全体件数を返す(取得件数上限 != null)

        return 戻り値.取得データをセットする(取得データ, 取得開始位置, 全体件数, 取得件数上限)
    }
}